[{"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\index.js":"1","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\reportWebVitals.js":"2","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\App.js":"3","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Category.js":"4","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Home.js":"5","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\NavApp.js":"6","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Expenses.js":"7","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Loader.js":"8"},{"size":609,"mtime":1616316107966,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":938,"mtime":1616347927356,"results":"12","hashOfConfig":"10"},{"size":8259,"mtime":1619650403552,"results":"13","hashOfConfig":"10"},{"size":1846,"mtime":1616316107958,"results":"14","hashOfConfig":"10"},{"size":1459,"mtime":1616316107996,"results":"15","hashOfConfig":"10"},{"size":14343,"mtime":1619650518988,"results":"16","hashOfConfig":"10"},{"size":482,"mtime":1616521420226,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6oaihu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\index.js",[],["37","38"],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\reportWebVitals.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\App.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Category.js",["39"],"import React, { Component } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Category extends Component {\r\n  exampleCategoryItem = {\r\n    id: null,\r\n    name: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      categories: [],\r\n      categoryItem: this.exampleCategoryItem,\r\n      showModal: false,\r\n      formMethod: \"PUT\",\r\n      errorMessage: \"\",\r\n      errorMessageCategoryName: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeFormMethod = this.changeFormMethod.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await fetch(\"/api/categories\");\r\n    const body = await response.json();\r\n    this.setState({ categories: body, isLoading: false });\r\n  }\r\n\r\n  changeFormMethod(method) {\r\n    this.setState({ formMethod: method });\r\n  }\r\n\r\n  openModal = () => {\r\n    document.body.classList.add(\"modal-open\");\r\n    this.setState({ showModal: true });\r\n    var backdrop = document.createElement(\"div\");\r\n    backdrop.setAttribute(\"id\", \"modalBackdrop\");\r\n    backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\r\n    document.body.appendChild(backdrop);\r\n  };\r\n\r\n  hideModal = () => {\r\n    document.body.classList.remove(\"modal-open\");\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n    var backdrop = document.getElementById(\"modalBackdrop\");\r\n    document.body.removeChild(backdrop);\r\n  };\r\n\r\n  // MAnuallyyyyy clear state and input fields\r\n  clearFieldsAndErrors = () => {\r\n    this.setState({\r\n      errorMessage: \"\",\r\n      errorMessageCategoryName: \"\",\r\n      categoryItem: {\r\n        id: null,\r\n        name: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let categoryItem = { ...this.state.categoryItem };\r\n    categoryItem[name] = value;\r\n    this.setState({ categoryItem });\r\n  }\r\n\r\n  async handleSubmit(event, method) {\r\n    event.preventDefault();\r\n    const categoryItem = this.state.categoryItem;\r\n    await fetch(\"/api/categories\", {\r\n      method: method,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(categoryItem),\r\n    })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          const error = data.message;\r\n          const errorDetails = data.details;\r\n          this.setState({ errorMessageCategoryName: errorDetails[0].message });\r\n          return Promise.reject(error);\r\n        }\r\n        const GETresponse = await fetch(\"/api/categories\");\r\n        const body = await GETresponse.json();\r\n        this.setState({\r\n          categories: body,\r\n          isLoading: false,\r\n        });\r\n        this.hideModal();\r\n        this.clearFieldsAndErrors();\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ errorMessage: error.toString() });\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n\r\n  passCategory(id, name) {\r\n    let categoryItem = { ...this.state.categoryItem };\r\n    categoryItem.id = id;\r\n    categoryItem.name = name;\r\n    this.setState({ categoryItem });\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(\"/api/categories/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(() => {\r\n      let updatedCategories = [...this.state.categories].filter(\r\n        (cat) => cat.id !== id\r\n      );\r\n      this.setState({ categories: updatedCategories });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const title = <h2>Categories</h2>;\r\n    const { categories, isLoading, showModal, formMethod } = this.state;\r\n\r\n    if (isLoading) return <Loader />;\r\n\r\n    {\r\n      /* Categories row */\r\n    }\r\n    let categoriesList = categories.map((category) => (\r\n      <tr key={category.id}>\r\n        <td>{category.name}</td>\r\n        <td className=\"table-align-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            onClick={() => this.remove(category.id)}\r\n            title=\"Delete category\"\r\n          >\r\n            <FontAwesomeIcon icon=\"times\" />\r\n          </button>{\" \"}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n            onClick={() => {\r\n              this.changeFormMethod(\"PUT\");\r\n              this.passCategory(category.id, category.name);\r\n              this.openModal();\r\n            }}\r\n            title=\"Edit category\"\r\n          >\r\n            <FontAwesomeIcon icon=\"edit\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container pt-appnav\">\r\n        <div\r\n          className={\"modal fade \" + (showModal ? \"show d-block\" : \"d-none\")}\r\n          id=\"categoryModal\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5\r\n                  className=\"modal-title\"\r\n                  id={\"categoryModal\" + this.state.formMethod + \"Label\"}\r\n                >\r\n                  {(formMethod === \"PUT\" ? \"Edit\" : \"Add\") + \" category\"}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => {\r\n                    this.clearFieldsAndErrors();\r\n                    this.hideModal();\r\n                  }}\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <form\r\n                onSubmit={(e) => this.handleSubmit(e, this.state.formMethod)}\r\n              >\r\n                <div className=\"modal-body\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"description\" className=\"form-label\">\r\n                      Name{\" \"}\r\n                      <span className=\"text-danger\">\r\n                        {this.state.errorMessageCategoryName}\r\n                      </span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.categoryItem.name}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                      this.clearFieldsAndErrors();\r\n                      this.hideModal();\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {title}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            this.changeFormMethod(\"POST\");\r\n            this.openModal();\r\n          }}\r\n        >\r\n          Add category\r\n        </button>\r\n\r\n        {/* CATEGORIES TABLE*/}\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: 85 + \"%\" }}>\r\n                Name\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                style={{ width: 15 + \"%\" }}\r\n                className=\"table-align-center\"\r\n              >\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody> {categoriesList}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Home.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\NavApp.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Expenses.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\components\\Loader.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":142,"column":5,"nodeType":"48","messageId":"49","endLine":144,"endColumn":6},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["52"],["53"],"no-global-assign","no-unsafe-negation"]