[{"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\index.js":"1","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\reportWebVitals.js":"2","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Category.js":"3","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Home.js":"4","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\NavApp.js":"5","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\App.js":"6","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Expenses.js":"7"},{"size":620,"mtime":1615420757860,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":959,"mtime":1615127439641,"results":"11","hashOfConfig":"9"},{"size":297,"mtime":1615127410311,"results":"12","hashOfConfig":"9"},{"size":1397,"mtime":1615420757854,"results":"13","hashOfConfig":"9"},{"size":788,"mtime":1615420757850,"results":"14","hashOfConfig":"9"},{"size":4239,"mtime":1615420757854,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6oaihu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\index.js",["33"],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\reportWebVitals.js",[],["34","35"],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Category.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Home.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\NavApp.js",["36"],"import React, { Component } from 'react';\r\nimport {Nav,Navbar,NavItem,NavbarBrand,NavLink} from 'reactstrap';\r\n\r\nclass NavApp extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n            <div class=\"container\">\r\n              <NavbarBrand href=\"/\">Budget Tracker</NavbarBrand>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                    <NavLink href=\"/\">Home</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/categories\">Categories</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/expenses\">Expenses</NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavApp;","C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\App.js",[],"C:\\Users\\Pablo\\VSCProjects\\budget-tracker\\budget-tracker-app\\src\\Expenses.js",["37","38","39","40"],"import React, { Component, useState }  from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, FormGroup, Button, Input, Label } from 'reactstrap';\r\n\r\n\r\nclass Expenses extends Component {\r\n    state = {  \r\n        date: new Date(),\r\n        isLoading: true,\r\n        expenses: [],\r\n        categories: []\r\n    }\r\n\r\n    handleChange\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch('/api/expenses')\r\n        const body = await response.json();\r\n        this.setState({expenses:body, isLoading: false});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch('/api/categories')\r\n        const body = await response.json();\r\n        this.setState({categories:body, isLoading: false});\r\n    }\r\n\r\n    render() { \r\n        const title = <h2>Add Expense</h2>;\r\n        const {expenses,categories, isLoading} = this.state;\r\n\r\n\r\n        if( isLoading){\r\n            return(\r\n                <React.Fragment>\r\n                    <h2>Loading...</h2>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return ( \r\n        <React.Fragment>             \r\n            {title}\r\n            <Form onSumit={this.handleSubmit}>\r\n                <FormGroup>\r\n                    <Label for=\"title\">Title</Label>\r\n                    <Input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"category\">Category</Label>\r\n                    {\r\n                    categories.map(category => <div id={category.id}>{category.name}</div>)\r\n\r\n                    }\r\n                    <Input type=\"text\" name=\"category\" id=\"category\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"expensedate\">Date</Label>\r\n                    <DatePicker selected={this.state.date} onChange={this.handleChange} />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"location\">Location</Label>\r\n                    <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    <Button color=\"secondary\" tag={Link} to =\"/categories\">Cancel</Button>\r\n\r\n                </FormGroup> \r\n            </Form>\r\n\r\n        </React.Fragment>  \r\n        );\r\n    }\r\n}\r\n \r\nexport default Expenses;",{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":9,"column":11,"nodeType":"51","endLine":9,"endColumn":44},{"ruleId":"41","severity":1,"message":"52","line":1,"column":28,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":22,"column":3,"nodeType":"55","messageId":"56","endLine":26,"endColumn":4},{"ruleId":"41","severity":1,"message":"57","line":30,"column":13,"nodeType":"43","messageId":"44","endLine":30,"endColumn":21},{"ruleId":"41","severity":1,"message":"58","line":30,"column":23,"nodeType":"43","messageId":"44","endLine":30,"endColumn":33},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","'expenses' is assigned a value but never used.","'categories' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]